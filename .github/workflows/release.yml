name: Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

env:
  CI: true
  SAVE_ARTIFACT: false

jobs:
  check-commit:
    if: contains(github.event.head_commit.message, 'Version')
    name: Check Commit
    runs-on: ubuntu-latest
    steps:
      - name: Validate if is version commit
        id: validate-message
        run: |
          REGEX="^Version [0-9]+\.[0-9]+\.[0-9]+$"
          COMMIT="${{ github.event.head_commit.message }}"
          [[ $COMMIT =~ $REGEX ]] && exit 0 || exit 1

  extract-information:
    name: Extract Information
    needs: check-commit
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract.outputs.TAG }}
      version: ${{ steps.extract.outputs.VERSION }}
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4

      - id: extract
        name: Extract tag and version
        run: |
          # Extract information from commit
          COMMIT="${{ github.event.head_commit.message }}"
          VERSION="$(echo $COMMIT | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')"
          TAG="v$VERSION"

          # Export information
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

  create-release:
    name: Create Release
    needs: extract-information
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4
      - id: create-release
        name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ needs.extract-information.outputs.tag }} \
            --title "Version ${{ needs.extract-information.outputs.version }}" \
            --latest \
            --generate-notes \
            LICENSE.md

  build-binary:
    name: Build Binary
    needs: [extract-information, create-release]
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4

      - id: setup-go
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.1'

      - id: setup-dependencies
        name: Setup dependencies
        run: make deps

      - id: setup-environment
        name: Setup environment
        run: |
          export PKG_CONFIG_PATH="/usr/local/lib:/usr/lib64/pkgconfig:/usr/share/pkgconfig"

      - id: build-binary
        name: Build binary app
        run: make build

      - id: upload-binary
        name: Upload binary app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ needs.extract-information.outputs.tag }}"
          gh release upload $TAG \
            bin/nicedeck \
            bin/nicedeck-gtk \
            bin/nicedeck-qt