name: Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

env:
  CI: true
  SAVE_ARTIFACT: false

jobs:
  check:
    if: contains(github.event.head_commit.message, 'Version')
    name: Check Commit
    runs-on: ubuntu-latest
    steps:
      - name: Validate if is version commit
        id: validate
        run: |
          REGEX="^Version [0-9]+\.[0-9]+\.[0-9]+$"
          COMMIT="${{ github.event.head_commit.message }}"
          [[ $COMMIT =~ $REGEX ]] && exit 0 || exit 1

  create-tag:
    name: Create Tag
    needs: check
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.TAG }}
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4

      - id: tag
        name: Create and push new tag
        run: |
          # Extract tag and version from commit
          COMMIT="${{ github.event.head_commit.message }}"
          VERSION="$(echo $COMMIT | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')"
          TAG="v$VERSION"

          # Create and push new tag
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a $TAG -m "Version $VERSION"
          git push origin $TAG

          # Export information
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"

  release:
    name: Release Version
    needs: [check, create-tag]
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-tag.outputs.tag }}

      - id: setup-go
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.1

      - id: build
        name: Build package
        run: make build

      - id: release
        name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE.md
            bin/*
